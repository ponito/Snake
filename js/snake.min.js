function Grid(){ctx.beginPath();ctx.strokeStyle="seagreen";for(let x=0;x<GLOBALS.grid.cells_x;x++){for(let y=0;y<GLOBALS.grid.cells_y;y++){ctx.rect(x*GLOBALS.grid.cellsizeX,y*GLOBALS.grid.cellsizeY,GLOBALS.grid.cellsizeX,GLOBALS.grid.cellsizeY)}}ctx.stroke()}const floor=Math.floor;var Direction;(function(Direction){Direction["UP"]="up";Direction["DOWN"]="down";Direction["LEFT"]="left";Direction["RIGHT"]="right"})(Direction||(Direction={}));class Snake{constructor(){this.head=new SnakeHead}render(){this.head.tail.render()}}class SnakeHead{length=3;score=0;pos=[floor(GLOBALS.grid.cells_x/2),floor(GLOBALS.grid.cells_y/2)];direction=Direction.UP;constructor(){let next=this.neck=new SnakeBody(this);let current;let length=this.length;while(--length>0){current=new SnakeBody(next);next=current;console.log(`l: ${length}`)}this.tail=current}move(direction){const[x,y]=this.pos;let newPos;switch(direction){case Direction.UP:newPos=[x,y-1];break;case Direction.DOWN:newPos=[x,y+1];break;case Direction.LEFT:newPos=[x-1,y];break;case Direction.RIGHT:newPos=[x+1,y];break}const t=GLOBALS.treasures.find(t=>t.pos==newPos);if(t)this.consume(t);this.direction=direction;this.pos=newPos}consume(t){switch(t.type){case"apple":this.grow();break}}grow(size=1){while(size>0){this.neck=this.neck.next=new SnakeBody(this);size-=1}}render(){const[x,y]=this.pos;ctx.fillStyle="dodgerblue";ctx.fillRect(x*GLOBALS.grid.cellsizeX+GLOBALS.grid.cellsizeX/10,y*GLOBALS.grid.cellsizeY+GLOBALS.grid.cellsizeX/10,GLOBALS.grid.cellsizeX*.8,GLOBALS.grid.cellsizeY*.8)}}class SnakeBody{constructor(next,direction=next.direction){this.next=next;const[x,y]=next.pos;switch(direction){case Direction.UP:this.pos=[x,y-1];break;case Direction.DOWN:this.pos=[x,y+1];break;case Direction.LEFT:this.pos=[x-1,y];break;case Direction.RIGHT:this.pos=[x+1,y];break}this.direction=direction}render(){const[x,y]=this.pos;ctx.fillStyle="dodgerblue";ctx.fillRect(x*GLOBALS.grid.cellsizeX+GLOBALS.grid.cellsizeX/5,y*GLOBALS.grid.cellsizeY+GLOBALS.grid.cellsizeX/5,GLOBALS.grid.cellsizeX*.6,GLOBALS.grid.cellsizeY*.6);this.next.render()}}class Treasure{type="apple";constructor(pos,type="apple"){this.type=type}render(){}}function setGridSize(cells_x,cells_y){GLOBALS.grid={cells_x:cells_x,cells_y:cells_y,cellsizeX:canvas.width/cells_x,cellsizeY:canvas.height/cells_y}}const canvas=document.getElementById("snake-game");const ctx=canvas.getContext("2d");const canvasDims={width:600,height:600};const theatorFit=window.onresize=()=>{let dims={width:window.innerWidth,height:canvasDims.height/canvasDims.width*window.innerWidth};if(window.innerHeight>dims.height){canvas.style.width="100%";canvas.style.height="initial";canvas.style.top=`calc(50% - ${dims.height+"px"}/2)`}else{canvas.style.height="100%";canvas.style.width="initial";canvas.style.top="initial"}};const GLOBALS={};const PROPS=[];const CHARS=[];function init(){setGridSize(15,15);CHARS.push(new Snake);theatorFit()}function renderBackground(){Grid()}function renderProps(){}function renderCharacters(){for(const c of CHARS){c.render()}}function renderControls(){}function startFrames(){ctx.clearRect(0,0,canvas.width,canvas.height);renderBackground();renderProps();renderCharacters();renderControls();window.requestAnimationFrame(startFrames)}init();startFrames();